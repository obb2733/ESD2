-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\sobelFilter2024a\Subsystem1_block1.vhd
-- Created: 2025-04-15 15:58:44
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Subsystem1_block1
-- Source Path: sobelFilter2024a/conv_core/just_gray_core/Subsystem1
-- Hierarchy Level: 2
-- Model version: 8.65
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Subsystem1_block1 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        channel_in_0                      :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        channel_in_1                      :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        channel_in_2                      :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        Enable                            :   IN    std_logic;
        Video_out                         :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END Subsystem1_block1;


ARCHITECTURE rtl OF Subsystem1_block1 IS

  -- Signals
  SIGNAL enb_gated                        : std_logic;
  SIGNAL alphavalid                       : std_logic;
  SIGNAL channel_in_0_unsigned            : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Shift_Arithmetic4_out1           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL channel_in_1_unsigned            : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Shift_Arithmetic3_out1           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Sum_op_stage1                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL channel_in_2_unsigned            : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Shift_Arithmetic5_out1           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Sum_out1                         : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Sum_out1_bypass                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Sum_out1_last_value              : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  -- slice out gray
  --                     Grayscale = (R * 0.25) + (G * 0.5) + (B * 0.0625)

  alphavalid <= Enable;

  enb_gated <= alphavalid AND enb;

  channel_in_0_unsigned <= unsigned(channel_in_0);

  Shift_Arithmetic4_out1 <= SHIFT_RIGHT(channel_in_0_unsigned, 2);

  channel_in_1_unsigned <= unsigned(channel_in_1);

  Shift_Arithmetic3_out1 <= SHIFT_RIGHT(channel_in_1_unsigned, 1);

  Sum_op_stage1 <= resize(Shift_Arithmetic4_out1 + Shift_Arithmetic3_out1, 9);

  channel_in_2_unsigned <= unsigned(channel_in_2);

  Shift_Arithmetic5_out1 <= SHIFT_RIGHT(channel_in_2_unsigned, 4);

  Sum_out1 <= resize(Sum_op_stage1, 8) + Shift_Arithmetic5_out1;

  Video_out_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Sum_out1_last_value <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        Sum_out1_last_value <= Sum_out1_bypass;
      END IF;
    END IF;
  END PROCESS Video_out_bypass_process;


  
  Sum_out1_bypass <= Sum_out1_last_value WHEN alphavalid = '0' ELSE
      Sum_out1;

  Video_out <= std_logic_vector(Sum_out1_bypass);

END rtl;

