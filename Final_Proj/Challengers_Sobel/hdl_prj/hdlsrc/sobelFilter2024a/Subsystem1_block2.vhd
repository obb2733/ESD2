-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\sobelFilter2024a\Subsystem1_block2.vhd
-- Created: 2025-04-15 15:58:44
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Subsystem1_block2
-- Source Path: sobelFilter2024a/conv_core/normalize image/Subsystem1
-- Hierarchy Level: 2
-- Model version: 8.65
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.conv_core_pkg.ALL;

ENTITY Subsystem1_block2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        channel_in                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        Enable                            :   IN    std_logic;
        Video_out                         :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END Subsystem1_block2;


ARCHITECTURE rtl OF Subsystem1_block2 IS

  -- Signals
  SIGNAL enb_gated                        : std_logic;
  SIGNAL alphavalid                       : std_logic;
  SIGNAL channel_in_unsigned              : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Max1_out1                        : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL GreaterThanOrEqual_out1          : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Max2_out1                        : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch1_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Delay2_reg                       : vector_of_unsigned8(0 TO 3);  -- ufix8 [4]
  SIGNAL Delay2_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Delay2_out1_bypass               : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Delay2_out1_last_value           : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  -- Normalize Image (Assuming Max is 115)

  alphavalid <= Enable;

  enb_gated <= alphavalid AND enb;

  channel_in_unsigned <= unsigned(channel_in);

  Max1_out1 <= to_unsigned(16#73#, 8);

  
  GreaterThanOrEqual_out1 <= '1' WHEN channel_in_unsigned >= Max1_out1 ELSE
      '0';

  
  switch_compare_1 <= '1' WHEN GreaterThanOrEqual_out1 > '0' ELSE
      '0';

  Max2_out1 <= to_unsigned(16#00#, 8);

  
  Switch1_out1 <= Max2_out1 WHEN switch_compare_1 = '0' ELSE
      channel_in_unsigned;

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_reg <= (OTHERS => to_unsigned(16#00#, 8));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        Delay2_reg(0) <= Switch1_out1;
        Delay2_reg(1 TO 3) <= Delay2_reg(0 TO 2);
      END IF;
    END IF;
  END PROCESS Delay2_process;

  Delay2_out1 <= Delay2_reg(3);

  Video_out_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1_last_value <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        Delay2_out1_last_value <= Delay2_out1_bypass;
      END IF;
    END IF;
  END PROCESS Video_out_bypass_process;


  
  Delay2_out1_bypass <= Delay2_out1_last_value WHEN alphavalid = '0' ELSE
      Delay2_out1;

  Video_out <= std_logic_vector(Delay2_out1_bypass);

END rtl;

